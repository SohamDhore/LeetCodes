// ERROR Code yet to be updated 

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: Optional[ListNode]
        :type l2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        carry = 0
        head = Linked_list(0)
        sum = head
        while l1 and l2:
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0
            sumNum = val1 + val2 + carry
            carry, value = divmod(sumNum, 10)
            sum.next = Linked_list(value)
            if l1:
                l1 = l1.next
            if l2:
                l2 = l2.next
        return head.next

            

class Linked_list():
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
    def add_node (head,val):
        if not head:
            return linked_list(val)
        current = head 
        while current.next:
            current = current.next
        current.next = linked_list(val)
        return head

dig1 = 10
print("enter the number")
num_A = None
for i in range(dig1):
    a = int(input())
    num_A = add_node(num_A,a)

dig2 = 10
print("enter the number")
num_B = None
for i in range(dig2):
    b = int(input())
    num_A = add_node(num_A,b)
solution = Solution()
sum = solution.addTwoNumbers(num_A,num_B)
print("the added number is :")
while sum:
    print(sum.val)
    sum=sum.next
